body {
    display: grid;
    gap: 2rem;
    padding: 2rem;
}

.box {
    width: 100px;
    height: 100px;
    background-color: aquamarine;
    margin: 0 auto;
    text-align: center;
    color: black;
    cursor: pointer;
    font-weight: bold;
    border-radius: 10px;
}

div img {
    width: 100px;
    object-fit: contain;
}

/* 1 */
.animacion-basica:hover {
    /* fadeIn es un nombre arbitrario */
    animation-name: fadeIn;
    animation-duration: 2s;
    animation-delay: 0s;

}

/* Define como funciona la animacion en termino de pasos */
@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}

/* Con animation definimos name/duration/delay/fill  */

/* 2 Fill mode */
/* Al terminar la animacion, se queda con el estilo final (TO/100%) */
.fill-forwards:hover {
    animation: crecer 2s forwards;
}

/* Durante el delay, muestra el estilo inicial antes de que empiece a animar */
.fill-backwards:hover {
    animation: crecer 2s 1s backwards;
}

/* Aplica forwards + backwards. Durante el delay muestra el from, y mantiene el to al final */
.fill-both:hover {
    animation: crecer 2s 1s backwards;
}

/* No le aplicamos estilos de keyframes ni antes ni despues, solo durante la animacion */
.fill-none:hover {
    animation: crecer 2s 1s infinite none;
}

@keyframes crecer {
    from {
        transform: scale(0.5);
        background-color: tomato;
    }

    to {
        transform: scale(1.5);
        background-color: green;
        color: white
    }
}

/* 3 Directions */
.direction-normal:hover {
    animation: girar 2s infinite normal linear;
}

.direction-reverse:hover {
    animation: girar 2s infinite reverse linear;
}

.direction-alternate:hover {
    animation: girar 2s infinite alternate linear;
}

@keyframes girar {
    from {
        transform: rotate(0deg);
    }

    to {
        transform: rotate(360deg);
    }
}

/* 4. iteration-count */
/* El 3 significa que se repetirÃ¡ 3 veces la animacion */
.repetir-tres:hover {
    animation: saltar 1s 3;
    animation-timing-function: damping(0.5, 0.3);
}

.repetir-cinco:hover {
    animation: saltar 1s 5;
}

@keyframes saltar {

    /* Ejemplo de % */
    0% {
        transform: translateY(0);
    }

    50% {
        transform: translateY(-300px);
    }

    100% {
        transform: translateY(0);
    }
}

/* Transform */
.transformaciones:hover {
    transform: translateX(50px) rotate(15deg) scale(1.2) skew(10deg, 5deg);
    background-color: brown;
    /* transform -> por la propiedad transform */
    transition: transform 0.4s ease-in;
}


/* Perspectiva 3d */
.perspectiva-container{
    perspective: 800px;
}

.box-3d:hover{
    animation: rotarY 3s infinite alternate ease-in-out;
    transform-style: preserve-3d;
}

@keyframes rotarY{
    from { transform: rotateY(0deg) }
    to { transform: rotateY(180deg) }
}

/* Transicion */
.transicion{
    transition: all 2s ease-in-out;
}

.transicion:hover{
    background-color: orange;
    transform: scale(1.3) rotate(20deg);
}

